<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <security:http pattern="/include/**" security="none"/>
    <security:http auto-config="true" use-expressions="true"
                   create-session="never">
        <!-- 관리자 영역 설정 -->
        <security:intercept-url pattern="/admin/**"
                                access="hasRole('ROLE_ADMIN')"/>
        <!-- 권한에 관계없이 접속 가능한 영역(guest 가능) -->
        <security:intercept-url pattern="/auth/**"
                                access="permitAll"/>

        <!-- 권한 있는 사용자 -->
        <security:intercept-url pattern="/user/**"
                                access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>

        <!-- 로그인한 사용자 영역 -->
        <security:intercept-url pattern="/**"
                                access="hasAnyRole('ROLE_USER','ROLE_ADMIN','ROLE_GUEST')"/>
        <!-- 로그인폼 -->
        <security:form-login login-page="/auth/login"
                             login-processing-url="/auth/login_check"
                             default-target-url="/"
                             authentication-failure-url="/auth/login?fail=true"
                             username-parameter="id" password-parameter="pwd"/>

        <security:session-management>
            <security:concurrency-control
                    max-sessions="1" expired-url="/auth/login"
                    error-if-maximum-exceeded="true"
            />
        </security:session-management>

        <!-- 로그아웃 관련 처리 -->
        <security:logout
                delete-cookies="JSESSIONID"
                logout-url="/auth/logout"
                invalidate-session="true"
                logout-success-url="/"
        />
        <!-- 접근 권한이 없는 경우 -->
<!--        <security:access-denied-handler-->
<!--                ref="userDeniedHandler"/>-->

        <!-- 자동 로그인 관련 쿠키 저장, 세션이 종료된 후에도 자동 로그인 할 수 있는 기능 -->
        <!--        <security:remember-me key="userKey"-->
        <!--                              token-validity-seconds="3600"/>-->
    </security:http>


    <!-- 사용자가 입력한 비밀번호를 암호화된 비밀번호와 체크하는 로직이 포함 --><!-- user-service-ref="userService"-->
    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="datasource"
                                        users-by-username-query="select user_id, user_pwd, 1 enabled from member where user_id = ?"
                                        authorities-by-username-query="select u_id, role_type from role where u_id = ?"/>
            <!--<security:password-encoder ref="passwordEncorder">
                <security:salt-source user-property="username"/>
            </security:password-encoder>-->
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- 비밀번호 암호화 빈 -->
    <bean id="passwordEncorder"
          class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
        <constructor-arg name="strength" value="256"/>
    </bean>
</beans>